@using KanbanBoard_Blazor.Models
@inject NavigationManager uriHelper
@inject ILocalStorageService localStorage



<div class="nav-item px-3">
	<MainBoard newProjectName="MainBoardSubmit" />
</div>
@foreach (var project in projects)
{
		<NavLink class="nav-link" href="@($"kanbanBoard/{project.id}")" @onclick="@(() => NavigateToProject(project.id))">
			<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-clipboard2-fill" viewBox="0 0 16 16">
				<path d="M9.5 0a.5.5 0 0 1 .5.5.5.5 0 0 0 .5.5.5.5 0 0 1 .5.5V2a.5.5 0 0 1-.5.5h-5A.5.5 0 0 1 5 2v-.5a.5.5 0 0 1 .5-.5.5.5 0 0 0 .5-.5.5.5 0 0 1 .5-.5z" />
				<path d="M3.5 1h.585A1.5 1.5 0 0 0 4 1.5V2a1.5 1.5 0 0 0 1.5 1.5h5A1.5 1.5 0 0 0 12 2v-.5q-.001-.264-.085-.5h.585A1.5 1.5 0 0 1 14 2.5v12a1.5 1.5 0 0 1-1.5 1.5h-9A1.5 1.5 0 0 1 2 14.5v-12A1.5 1.5 0 0 1 3.5 1" />
			</svg>
			<span class="bi bi-house-door-fill-nav-menu" aria-hidden="true"></span> @(project.name)
		</NavLink>
}





@code {
	private List<Project> projects = new List<Project>();

	private void NavigateToProject(string projectId)
	{

		uriHelper.NavigateTo($"kanbanBoard/{projectId}", forceLoad: true);
	}
	private async Task LoadGuids()
	{
		projects = await localStorage.GetItemAsync<List<Project>>("projects") ?? new List<Project>();
		StateHasChanged();
	}

	protected override async Task OnInitializedAsync()
	{
		await LoadGuids();
	}

	private async void MainBoardSubmit(string _name)
	{
		string newId = Guid.NewGuid().ToString();
		projects.Add(new Project
			{
				id = newId,
				name = _name
			});
		await localStorage.SetItemAsync("projects", projects);
		await LoadGuids();
	}

}
